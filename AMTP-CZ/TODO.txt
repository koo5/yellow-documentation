Design stranky:
- V mobilní verzi při kliknutí na položku v TOC zasunout menu s TOC
- Když je menu vysunuté, tak místo hamburgeru zobrazovat křížek
- Šipku přesunout vlevo od textu a předělat jí na plusko / mínusko
- Dořešit itemy v TOC se šipkou mají rozdílnou velikost oproti těm bez šipky
- Když je TOC menu na desktop verzi zasunuté, tak v mobilní je vysunuté a obráceně - chtělo by to předělat u mobilní verze, aby se nevysouvalo, když na desktopu je zasunuté
- Automatický highlight sekce v TOC, na kterou je aktuálně doscrollováno (jinou barvou, než aktivní - zakliknutá sekce)
- Po refreshi stránky, pokud je v adrese #sekce - tak jí zvýraznit v TOC jako aktivní

Dopsání obsahu:
- Zabezpečení - přidat novou sekci - Podepisování obsahu - t.j. veškerý obsah, který vytvářím (např. zprávy, video apod.), je to kvůli tomu, aby mě můj home server nemohl fejkovat. Veřejné klíče mohu vystavit někam mimo AMTP server (např. na svůj web) - tuto sekci dát před koncové šifrování, protože nejdříve se podepisuje, pak šifruje.
- U všech commandů vyhodit "command" někam nad to, protože datový typ není hodnota
- Na začátek commandů popsat obecnou strukturu příkazu:
{
 command: "...",
 params: {
  ...
 }
}
- Přidat další výhodu protokolu: migrovatelnost účtu z jiných home serverů (přenesení nejen dat, ale i ověření identity) - tzn. když si změním server a identitu na jiný server pod jinou doménou, tak se uživatelům, se kterými jsem komunikoval, pošlu ověření pomocí svého soukromého klíče (otázka je, jestli to bude ten stejný veřejný klíč, kterým se normálně přihlašuju nebo nejaký další). Já budu mít stále stejný soukromý a veřejný klíč s nekým - a sice si změním identitu, ale ta druhá strana dostane upozornění, že jsem si změnil adresu, ale validuju se tím svým klíčem a tak si mě druhá strana ověří.
- Přidat další výhodu protokolu: rozepsat most do SMTP serveru
- Přidat 3 commandy (ne síťové, ale mezi modulem a corem), které vrací:
  - 1. Které domény jsou ke konkretnímu serveru
  - 2. Doména - vrátí název serveru
  - 3. Doména + název serveru -> true / false
- Vlastnímu serveru předává informaci klient "to" (kterému serveru to je) a server protější strany přidá "from" (od koho to dostal) a to předá svému modulu ("to" může umazat)
- Pročíst "zprávy mezi moduly" v html dokumentaci
- Notes.md - přeházet do html
- Dopsat všechny commandy v dokumentaci, kde je TODO
- Blokaci neautorizovaných přístupů popsat i v commandech (obecně popsáno v Zabezpečení - Blokace neautorizovaných přístupů) - u loginu admina, loginu usera, pokusy s neplatným tokenem u usera i ověřování server-to-server (PUBKEY z DNS)
- Přidat commandy pro management zablokovaných IP adminem (fail2ban) - ruční banování, odbanování adminem + přidat statusy těmto zlým serverům / klientům ve stylu "You are not welcome here" při pokusech o přihlášení / challenge
- Přidat commandy pro správu uživatelských tokenů (uživatel maže své, admin maže všech, zobrazení expirace, nějaké identifikace zařízení (+ možnost změny názvu zařízení) apod.)
- Přidat commandy u admina pro změnu svého pubkey + hesla
- Přidat commandy pro admina na blokaci uživatelských účtů + pokud se takový uživatel bude přihlašovat, tak vracet status o tom, že je zablokovaný, kdo zablokoval, kdy, proč atd.
- Přidat commandy pro admina na změnu pubkey + hesla běžných uživatelů
- Zamyslet se nad dalšími commandy do jádra

Návrh verze 2:
- Přesunutí uživatelských účtů / přihlášení do modulu - přidá další možnosti ověření: OAuth / social loginy atd.
- Uživatelské / správcovské heslo použít jako privátní klíč a z něj vytvořit veřejný - pokud to jde, vytvořit stejný typ challenge-response přihlášení, jako je u privátního klíče, aby se heslo nemuselo (byť v zahashované podobě) posílat po síti (pokud to má vůbec smysl, protože Argon2 má nějaký random autosalting a pokaždé se posílá něco jiného po síti, takže to funguje podobně, jako challenge-response) - toto vyžaduje nějaký hlubší research kryptografa (jak moc je Argon prolomitelný, jestli vůbec lze něco jako password-as-private-key). Obecně prolomení šifry styly: "z public key získat private key" versus "prolomit Argon2id hash"
- Admin příkazy pro management modulů a audit logů - přidá se do dokumentace až poté, co zjistíme, co všechno je třeba logovat
- Tokenové páry krátkodobých tokenů - access token a refresh token, místo dlouhodobých tokenů - zjistit implementací, jelikož nevíme, jak dlouhé sessions většinou udrží WebTransport a jestli se nebudou měnit při každém připojení
- ACL s právy pro konkrétní akce adminů + zavedení možnosti změny klíče ostatních adminů v případě, že má admin toto právo
- Digitální podpis serveru - navrhnout alternativu k DNS - něco jako notary server na Matrix protokolu (resp. ne jako alternativu, ale jako další vrstvu zabezpečení)
- Rozšíření fail2ban na obecný rate limit na počet commandů za jednotku času (těžko říct, jestli to je reálné, protože file transfer toho bude generovat docela hodně, takže se uvidí v praxi v budoucnu)
